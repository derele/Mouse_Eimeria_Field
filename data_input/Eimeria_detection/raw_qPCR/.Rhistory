* Number of Mus musculus caught with OPG counted: `r nrow(myData[!is.na(myData$OPG),])`
* Number of Mus musculus caught with qPCR performed: `r nrow(myData[!is.na(myData$delta_ct_MminusE),])`
* Number of Mus musculus caught with either OPG counted or qPCR performed: `r nrow(myData[!is.na(myData$delta_ct_MminusE) | !is.na(myData$OPG),])`
* Number of Mus musculus caught with OPG counted AND qPCR performed: `r nrow(myData[!is.na(myData$delta_ct_MminusE) & !is.na(myData$OPG),])`
* Some information regarding latitude and longitude are missing for the following mice:
`r latLongMissing`
* We still miss info (HI) on the following mice (ask Jarda):
`r miceInfoNeeded`
# General informations on HMHZ
* `r Nmice` mice were captured over three years, from `r Nfarm` farms
* From these mice:
* `r noo` mice had Eimeria detected by feces flotation,
* `r npcr` mice had Eimeria detected by colon content PCR (cf paper Victor),
* `r nqPCR` mice had Eimeria detected by qPCR on intestinal tissues
* On average, `r round(MEAN,2)` mice were caught per farm (95% CI `r round(CI,2)`)
* **Hybrid indexes** were calculated as ratio of M.m.d/M.m.m alleles (between `r minHINloci` and `r maxHINloci`, on average `r meanHINloci` loci)
```{r plotDensHI, echo=FALSE, warning=FALSE, fig.width=5,fig.height=3,fig.cap="\\label{fig:plot1}Number of animals caught along the hybrid index "}
ggplot(myData, aes(x = HI)) +
geom_histogram(binwidth = 0.05, col = "black", fill = "lightblue") +
theme_bw() +
ggtitle("Density of hybrids") +
facet_grid(. ~ Year)
```
# Prevalence of our 3 different methods
## Prevalence tables
```{r prevcompared, echo = FALSE}
prevalenceFlotation <- getPrevalenceTable(table(myData$OPG > 0,
myData$Year))
prevalencePCR <- getPrevalenceTable(table(myData$PCRstatus,
myData$Year))
prevalenceqPCR <- getPrevalenceTable(table(myData$delta_ct_MminusE > - THRESHOLD,
myData$Year))
# samples are negative appart if ONE at least is positive
myData$allDetectionMethod <- "negative"
myData$allDetectionMethod[myData$OPG > 0 |
myData$PCRstatus == "positive" |
myData$delta_ct_MminusE > - THRESHOLD] <- "positive"
prevalenceTot <- getPrevalenceTable(table(myData$allDetectionMethod,
myData$Year ))
```
```{r tabPrevOO, echo=FALSE, results='asis'}
library(knitr)
kable(prevalenceFlotation, caption = "Prevalence of Eimeria per year, based on oocyst flotation")
```
```{r tabPrevPCR, echo=FALSE, results='asis'}
library(knitr)
kable(prevalencePCR, caption = "Prevalence of Eimeria per year, based on PCR detection. A mouse was considered infected by Eimeria ifone of the 3 markers (COI, 18S or ORF470) gave a sequence")
```
```{r tabPrevqPCR, echo=FALSE, results='asis'}
library(knitr)
kable(prevalenceqPCR, caption = "Prevalence of Eimeria per year, based on qPCR")
```
```{r tabPrevtot, echo=FALSE, results='asis'}
kable(prevalenceTot, caption = "Prevalence of Eimeria per year, based on all detections methods. A mouse was considered infected by Eimeria if one of the 3 markers (COI, 18S or ORF470) gave a sequence, OR if it had a positive count of oocysts in its feces, OR if it was qPCR positive")
```
## OPG-PCR
```{r opgpcr, echo=FALSE, warning=FALSE}
# first, compare PCR and oocysts
completeData1 <- myData[!is.na(myData$OPG) &
!is.na(myData$PCRstatus),]
myVennDiagram2 <- function(data){
area1 = nrow(subset(data, PCRstatus == "positive"))
area2 = nrow(subset(data, OPG > 0))
## areas of 2-group overlap
cross.area = nrow(subset(data, PCRstatus == "positive" & OPG > 0))
grid.newpage()
draw.pairwise.venn(area1 = area1,
area2 = area2,
cross.area = cross.area,
category = c("PCR", "OPG"),
col = "transparent",
fill = c("grey","green"),
alpha = 0.50,
cex = 1.5, cat.cex = 1.5, fontfamily = "serif", fontface = "bold",
cat.col = c("grey","green"),
cat.fontfamily = "serif")
}
myVennDiagram2(completeData1)
```
## OPG-qPCR
```{r opgpcrVenn, echo=FALSE, warning=FALSE}
# first, compare PCR and oocysts
completeDataopgqpcr <- myData[!is.na(myData$OPG) &
!is.na(myData$delta_ct_MminusE),]
myVennDiagram3 <- function(data){
area1 = nrow(subset(data, delta_ct_MminusE > -THRESHOLD))
area2 = nrow(subset(data, OPG > 0))
## areas of 2-group overlap
cross.area = nrow(subset(data, delta_ct_MminusE > -THRESHOLD & OPG > 0))
grid.newpage()
draw.pairwise.venn(area1 = area1,
area2 = area2,
cross.area = cross.area,
category = c("qPCR", "OPG"),
col = "transparent",
fill = c("grey","green"),
alpha = 0.50,
cex = 1.5, cat.cex = 1.5, fontfamily = "serif", fontface = "bold",
cat.col = c("grey","green"),
cat.fontfamily = "serif")
}
myVennDiagram3(completeDataopgqpcr)
```
```{r opgqpcr, echo=FALSE, warning=FALSE}
data1 <- myData[!is.na(myData$delta_ct_MminusE) &
!is.na(myData$OPG), ]
ggplot(data1,
aes(x = delta_ct_MminusE, y = OPG)) +
geom_point(aes(fill = qPCRsummary),
alpha = .5, size = 4, pch = 21) +
geom_smooth(method = "lm", se = FALSE, col = "red") +
theme_bw()  +
# scale_y_log10() +
ggtitle("Compare qPCR results and OPG")
summary(lm(data1$OPG ~ data1$delta_ct_MminusE))
```
## OPG-qPCR-PCR
```{r opgpcrpcr, echo=FALSE, warning=FALSE}
# to compare, keep only samples tested for the 3 methods
completeData <- myData[!is.na(myData$OPG) &
!is.na(myData$PCRstatus) &
!is.na(myData$delta_ct_MminusE),]
myVennDiagram3 <- function(data){
area1 = nrow(subset(data, PCRstatus == "positive"))
area2 = nrow(subset(data, OPG > 0))
area3 = nrow(subset(data, delta_ct_MminusE > - THRESHOLD))
## areas of 2-group overlap
n12 = nrow(subset(data, PCRstatus == "positive" & OPG > 0))
n23 = nrow(subset(data, delta_ct_MminusE > - THRESHOLD & OPG > 0))
n13 = nrow(subset(data, PCRstatus == "positive" & delta_ct_MminusE > - THRESHOLD))
## areas of 3-group overlap
n123 = nrow(subset(data, PCRstatus == "positive" &
OPG > 0 &
delta_ct_MminusE > - THRESHOLD))
grid.newpage()
draw.triple.venn(area1 = area1, area2 = area2, area3 = area3,
n12 = n12, n23 = n23, n13 = n13,
n123 = n123,
category = c("PCR", "OPG", "qPCR"),
col = "transparent",
fill = c("grey","green","orange"),
alpha = 0.50,
cex = 1.5, cat.cex = 1.5, fontfamily = "serif", fontface = "bold",
cat.col = c("grey","green","orange"),
cat.fontfamily = "serif")
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggmap)
library(data.table)
library(plyr)
library("VennDiagram")
library(grid)
library(gridExtra)
library(knitr)
source("functions/HMHZ_Functions.R")
source("functions/makeMiceTable.R")
# Define threshold for qPCR data (cf Enas & Victor papers)
THRESHOLD <- 5 # choice of sensitivity
## Load data from oocysts counting
flotDF <- read.csv("../raw_data/Eimeria_detection/FINALOocysts2015to2017.csv")
LorenzoDF <- read.csv("../raw_data/Eimeria_detection/Eimeria_oocysts_2015&2017_Lorenzo.csv")
## Import PCR data
PCRdf <- read.csv("../raw_data/Eimeria_detection/Inventory_contents_all.csv")
## Import qPCR data
if (THRESHOLD == 5){
qpcrData <- read.csv("../raw_data/Eimeria_detection/FINALqpcrData_2016_2017_threshold5.csv")
} else {
qpcrData <- read.csv("../raw_data/Eimeria_detection/FINALqpcrData_2016_2017_threshold3.75.csv")
}
qpcrData <- qpcrData[!is.na(qpcrData$delta_ct_ilwe_MminusE) & !is.na(qpcrData$delta_ct_cewe_MminusE),]
#################### Load data ####################
# General data
miceTable <- makeMiceTable("../../Data_important/")
# Remove other rodents
otherRodentsID <- c(miceTable$Mouse_ID[miceTable$Species %in% "Pet mus musculus"],
miceTable$Mouse_ID[grep("ZZ", miceTable$Mouse_ID)])
myData <- miceTable[!miceTable$Mouse_ID %in% otherRodentsID,]
justOPG <- myData[!is.na(myData$OPG) & myData$OPG > 0 &
!is.na(myData$PCRstatus) & myData$PCRstatus == "negative" &
!is.na(myData$delta_ct_MminusE) & myData$delta_ct_MminusE > - THRESHOLD,]
myVennDiagram3(completeData)
completeData <- myData[!is.na(myData$OPG) &
!is.na(myData$PCRstatus) &
!is.na(myData$delta_ct_MminusE),]
myVennDiagram3 <- function(data){
area1 = nrow(subset(data, PCRstatus == "positive"))
area2 = nrow(subset(data, OPG > 0))
area3 = nrow(subset(data, delta_ct_MminusE > - THRESHOLD))
## areas of 2-group overlap
n12 = nrow(subset(data, PCRstatus == "positive" & OPG > 0))
n23 = nrow(subset(data, delta_ct_MminusE > - THRESHOLD & OPG > 0))
n13 = nrow(subset(data, PCRstatus == "positive" & delta_ct_MminusE > - THRESHOLD))
## areas of 3-group overlap
n123 = nrow(subset(data, PCRstatus == "positive" &
OPG > 0 &
delta_ct_MminusE > - THRESHOLD))
grid.newpage()
draw.triple.venn(area1 = area1, area2 = area2, area3 = area3,
n12 = n12, n23 = n23, n13 = n13,
n123 = n123,
category = c("PCR", "OPG", "qPCR"),
col = "transparent",
fill = c("grey","green","orange"),
alpha = 0.50,
cex = 1.5, cat.cex = 1.5, fontfamily = "serif", fontface = "bold",
cat.col = c("grey","green","orange"),
cat.fontfamily = "serif")
}
myVennDiagram3(completeData)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggmap)
library(data.table)
library(plyr)
library("VennDiagram")
library(grid)
library(gridExtra)
library(knitr)
source("functions/HMHZ_Functions.R")
source("functions/makeMiceTable.R")
# Define threshold for qPCR data (cf Enas & Victor papers)
THRESHOLD <- 5 # choice of sensitivity
## Load data from oocysts counting
flotDF <- read.csv("../raw_data/Eimeria_detection/FINALOocysts2015to2017.csv")
LorenzoDF <- read.csv("../raw_data/Eimeria_detection/Eimeria_oocysts_2015&2017_Lorenzo.csv")
## Import PCR data
PCRdf <- read.csv("../raw_data/Eimeria_detection/Inventory_contents_all.csv")
## Import qPCR data
if (THRESHOLD == 5){
qpcrData <- read.csv("../raw_data/Eimeria_detection/FINALqpcrData_2016_2017_threshold5.csv")
} else {
qpcrData <- read.csv("../raw_data/Eimeria_detection/FINALqpcrData_2016_2017_threshold3.75.csv")
}
qpcrData <- qpcrData[!is.na(qpcrData$delta_ct_ilwe_MminusE) & !is.na(qpcrData$delta_ct_cewe_MminusE),]
#################### Load data ####################
# General data
miceTable <- makeMiceTable("../../Data_important/")
# Remove other rodents
otherRodentsID <- c(miceTable$Mouse_ID[miceTable$Species %in% "Pet mus musculus"],
miceTable$Mouse_ID[grep("ZZ", miceTable$Mouse_ID)])
myData <- miceTable[!miceTable$Mouse_ID %in% otherRodentsID,]
flotDF$OPG <- as.numeric(as.character(flotDF$OPG))
flotDF <- flotDF[!is.na(flotDF$OPG),]
## Lorenzo count (in 1mL dilution) for comparison
LorenzoDF <- LorenzoDF[!is.na(LorenzoDF$OPG),]
### Plot comparative Alice (dilution 0.1mL for most samples) and Lorenzo (dilution 1mL)
compData <- merge(flotDF, LorenzoDF, by = "Mouse_ID", all = T)
# merge with current data
myData <- merge(myData, flotDF, all = T)
### Comparison 2 methods of flotation
# How many samples new were detected by decreasing the dilution?
N1 <- sum(compData$OPG.x > 0 & compData$OPG.y == 0, na.rm = T)
adjrsq <- summary(lm(compData$OPG.x ~ compData$OPG.y))$adj.r.squared
ggplot(
compData, aes(x = OPG.x+1, y = OPG.y+1)) +
geom_point(alpha = .5, size = 4) +
coord_equal(ratio=1) +
xlab("OPG + 1 counted in 0.1ml") +
ylab("OPG + 1 counted in 1ml") +
geom_smooth(method = "lm", se = FALSE, col = "red") +
geom_abline(intercept = 0, slope = 1, linetype = 3) +
scale_y_log10() +
scale_x_log10() +
theme_bw()
# Remove other rodents
myData <- myData[!myData$Mouse_ID %in% otherRodentsID,]
# correct year
myData$Year[is.na(myData$Year)] <- myData$year[is.na(myData$Year)]
myData <- subset(myData, select = -c(year))
ggplot(myData[!is.na(myData$OPG) &
myData$OPG >0,], aes(x = HI, y = OPG+1)) +
geom_point(aes(fill = as.factor(Year)), pch = 21, alpha = .8, size = 4) +
geom_smooth(se=F) +
scale_y_log10() +
theme_bw() +
theme(legend.position="top") +
theme(legend.title = element_blank()) +
facet_grid(. ~ Year)
#correct wrong names
toremove <- paste0(paste0("X",1:30, "_"), collapse = "|")
names(PCRdf) <- gsub(toremove, "", names(PCRdf))
names(PCRdf)[names(PCRdf)%in%"ID_mouse"] <- "Mouse_ID"
names(PCRdf)[names(PCRdf)%in%"Year"] <- "yearpcr"
PCRdf$Mouse_ID = gsub(" ", "", PCRdf$Mouse_ID) # fix the extra space
# by default, I enter PCRstatus as negative, then overwrite
PCRdf$PCRstatus = "negative"
# PCR positive = one of the 3 other markers than AP5 sequenced
# (Ap5 was used for detection only, the other markers for confirmation)
PCRdf$PCRstatus[PCRdf$`18S_Seq` == "positive" |
PCRdf$COI_Seq == "positive" |
PCRdf$ORF470_Seq == "positive"] <- "positive"
# PCRstatus is NA if everything is NA
PCRdf$PCRstatus[is.na(PCRdf$Ap5_PCR) &
is.na(PCRdf$`18S_Seq`) &
is.na(PCRdf$COI_Seq) &
is.na(PCRdf$ORF470_Seq)] <- NA
# merge with actual df
myData2 <- merge(myData, PCRdf, by = c("Mouse_ID"), all = T)
# Keep code and transect from original data
myData2$Code <- myData2$Code.x
myData2$Transect <- myData2$Transect.x
myData <- myData2
rm(myData2)
# Remove other rodents
myData <- myData[!myData$Mouse_ID %in% otherRodentsID,]
# correct year
myData$Year[is.na(myData$Year)] <- myData$yearpcr[is.na(myData$Year)]
myData <- subset(myData, select = -c(yearpcr))
# plot PCR
ggplot(myData[!is.na(myData$PCRstatus),], aes(y = HI, x = PCRstatus)) +
# geom_smooth() +
geom_violin() +
geom_jitter(aes(fill = PCRstatus), pch = 21, alpha = .2, size = 4) +
theme_bw() +
theme(legend.position="top") +
theme(legend.title = element_blank()) +
facet_grid(. ~ Year) +
ggtitle("Violin plots on PCR data")
# merge
myData <- merge(myData, qpcrData, by = "Mouse_ID", all = T)
# plot qPCR
ggplot(myData[!is.na(myData$delta_ct_MminusE) &
myData$delta_ct_MminusE > - THRESHOLD,],
aes(x = HI)) +
geom_point(aes(y = delta_ct_MminusE, fill = qPCRsummary), pch = 21, alpha = .8, size = 4) +
geom_smooth(aes(y = delta_ct_MminusE))+#, col = as.factor(Year))) +
theme_bw() +
theme(legend.position="top") +
theme(legend.title = element_blank()) +
facet_grid(. ~ Year) +
ggtitle(paste0("Smooth on qPCR data (positive only (> -", THRESHOLD, ")"))
ggplot(myData[myData$Year %in% c(2016, 2017),], aes(x = HI, y = delta_ct_MminusE, col = OPG > 0)) +
geom_point(size = 5) +
geom_hline(yintercept = -THRESHOLD) +
facet_grid(.~Year) +
theme_bw() +
ggtitle("Remark of J. Wolinska: some individuals here HAVE qPCR value, but no oocyst count?")
# Todo later: test if points for HI ~ 0.5 are dead ends...
## Remove useless mice:
# wildpark Schorfheide (not needed, test)
wsh <- c(paste0("AA_000", 1:9), paste0("AA_00", 10:46))
# apodemus caught in 2016
apd <- c("A_0001", "A_0002", "A_0003")
# useless info
useless <- c(wsh, apd)
# Keep mice with OPG, PCR or qPCR status
myData <- myData[!myData$Mouse_ID %in% useless & # no wilpark schofheide
(!is.na(myData$OPG) |
!is.na(myData$PCRstatus) |
!is.na(myData$delta_ct_MminusE)),] # have one of these status
## Which mice are not found (no HI given for these mice)?
miceInfoNeeded <- myData$Mouse_ID[is.na(myData$HI)]
# latitude or longitude missing for mice:
latLongMissing <- myData$Mouse_ID[
is.na(myData$Latitude) |
is.na(myData$Longitude)]
# keep only North Germany
myData <- myData[!is.na(myData$Latitude) &
myData$Latitude > 51 &
myData$Longitude < 17, ]
# Total
Nmice <- nrow(myData)
Nfarm <- length(unique(myData$farm))
# Create map of samples
mapHMHZ <- HI.map(df = myData, size = 2, alpha = .3, margin = 0.2, zoom = 8)
mapHMHZ
# mean and 95% ci of N of mice caught / farm (assuming normal distribution)
MEAN <- mean(by(myData, myData["farm"], nrow))
CI <- qnorm(0.975)*sd(by(myData, myData["farm"], nrow))/
sqrt(nrow(myData))
# Hybrid index calculation:
minHINloci = min(as.numeric(substr(myData$HI_NLoci, 4,6)), na.rm = T)
maxHINloci = max(as.numeric(substr(myData$HI_NLoci, 4,6)), na.rm = T)
meanHINloci = round(mean(as.numeric(substr(myData$HI_NLoci, 4,6)), na.rm = T))
######### Compare our methods of detection #########
noo <- table(!is.na(myData$OPG))[2]
npcr <- table(!is.na(myData$PCRstatus))[2]
nqPCR <- table(!is.na(myData$delta_ct_MminusE))[2]
ggplot(myData, aes(x = HI)) +
geom_histogram(binwidth = 0.05, col = "black", fill = "lightblue") +
theme_bw() +
ggtitle("Density of hybrids") +
facet_grid(. ~ Year)
prevalenceFlotation <- getPrevalenceTable(table(myData$OPG > 0,
myData$Year))
prevalencePCR <- getPrevalenceTable(table(myData$PCRstatus,
myData$Year))
prevalenceqPCR <- getPrevalenceTable(table(myData$delta_ct_MminusE > - THRESHOLD,
myData$Year))
# samples are negative appart if ONE at least is positive
myData$allDetectionMethod <- "negative"
myData$allDetectionMethod[myData$OPG > 0 |
myData$PCRstatus == "positive" |
myData$delta_ct_MminusE > - THRESHOLD] <- "positive"
prevalenceTot <- getPrevalenceTable(table(myData$allDetectionMethod,
myData$Year ))
# first, compare PCR and oocysts
completeData1 <- myData[!is.na(myData$OPG) &
!is.na(myData$PCRstatus),]
myVennDiagram2 <- function(data){
area1 = nrow(subset(data, PCRstatus == "positive"))
area2 = nrow(subset(data, OPG > 0))
## areas of 2-group overlap
cross.area = nrow(subset(data, PCRstatus == "positive" & OPG > 0))
grid.newpage()
draw.pairwise.venn(area1 = area1,
area2 = area2,
cross.area = cross.area,
category = c("PCR", "OPG"),
col = "transparent",
fill = c("grey","green"),
alpha = 0.50,
cex = 1.5, cat.cex = 1.5, fontfamily = "serif", fontface = "bold",
cat.col = c("grey","green"),
cat.fontfamily = "serif")
}
myVennDiagram2(completeData1)
# first, compare PCR and oocysts
completeDataopgqpcr <- myData[!is.na(myData$OPG) &
!is.na(myData$delta_ct_MminusE),]
myVennDiagram3 <- function(data){
area1 = nrow(subset(data, delta_ct_MminusE > -THRESHOLD))
area2 = nrow(subset(data, OPG > 0))
## areas of 2-group overlap
cross.area = nrow(subset(data, delta_ct_MminusE > -THRESHOLD & OPG > 0))
grid.newpage()
draw.pairwise.venn(area1 = area1,
area2 = area2,
cross.area = cross.area,
category = c("qPCR", "OPG"),
col = "transparent",
fill = c("grey","green"),
alpha = 0.50,
cex = 1.5, cat.cex = 1.5, fontfamily = "serif", fontface = "bold",
cat.col = c("grey","green"),
cat.fontfamily = "serif")
}
myVennDiagram3(completeDataopgqpcr)
data1 <- myData[!is.na(myData$delta_ct_MminusE) &
!is.na(myData$OPG), ]
ggplot(data1,
aes(x = delta_ct_MminusE, y = OPG)) +
geom_point(aes(fill = qPCRsummary),
alpha = .5, size = 4, pch = 21) +
geom_smooth(method = "lm", se = FALSE, col = "red") +
theme_bw()  +
# scale_y_log10() +
ggtitle("Compare qPCR results and OPG")
summary(lm(data1$OPG ~ data1$delta_ct_MminusE))
# to compare, keep only samples tested for the 3 methods
completeData <- myData[!is.na(myData$OPG) &
!is.na(myData$PCRstatus) &
!is.na(myData$delta_ct_MminusE),]
myVennDiagram3 <- function(data){
area1 = nrow(subset(data, PCRstatus == "positive"))
area2 = nrow(subset(data, OPG > 0))
area3 = nrow(subset(data, delta_ct_MminusE > - THRESHOLD))
## areas of 2-group overlap
n12 = nrow(subset(data, PCRstatus == "positive" & OPG > 0))
n23 = nrow(subset(data, delta_ct_MminusE > - THRESHOLD & OPG > 0))
n13 = nrow(subset(data, PCRstatus == "positive" & delta_ct_MminusE > - THRESHOLD))
## areas of 3-group overlap
n123 = nrow(subset(data, PCRstatus == "positive" &
OPG > 0 &
delta_ct_MminusE > - THRESHOLD))
grid.newpage()
draw.triple.venn(area1 = area1, area2 = area2, area3 = area3,
n12 = n12, n23 = n23, n13 = n13,
n123 = n123,
category = c("PCR", "OPG", "qPCR"),
col = "transparent",
fill = c("grey","green","orange"),
alpha = 0.50,
cex = 1.5, cat.cex = 1.5, fontfamily = "serif", fontface = "bold",
cat.col = c("grey","green","orange"),
cat.fontfamily = "serif")
}
myVennDiagram3(completeData)
justOPG <- myData[!is.na(myData$OPG) & myData$OPG > 0 &
!is.na(myData$PCRstatus) & myData$PCRstatus == "negative" &
!is.na(myData$delta_ct_MminusE) & myData$delta_ct_MminusE > - THRESHOLD,]
nrow(justOPG)
justOPG$OPG
justOPG <- myData[!is.na(myData$OPG) & myData$OPG > 0 &
!is.na(myData$PCRstatus) & myData$PCRstatus == "negative" &
!is.na(myData$delta_ct_MminusE) & myData$delta_ct_MminusE < - THRESHOLD,]
nrow(justOPG)
justOPG$OPG
table(myData$OPG > 0, myData$PCRstatus == "positive", myData$delta_ct_MminusE > - THRESHOLD )
table(OPG = myData$OPG > 0, myData$PCRstatus == "positive", myData$delta_ct_MminusE > - THRESHOLD )
table(OPG = myData$OPG > 0, PCR = myData$PCRstatus == "positive", qPCR = myData$delta_ct_MminusE > - THRESHOLD )
justOPG <- myData[!is.na(myData$OPG) & myData$OPG > 0 &
!is.na(myData$PCRstatus) & myData$PCRstatus == "negative" &
!is.na(myData$delta_ct_MminusE) & myData$delta_ct_MminusE < - THRESHOLD,]
nrow(justOPG)
justOPG <- myData[!is.na(myData$OPG) & myData$OPG > 0 &
!is.na(myData$PCRstatus) & myData$PCRstatus == "negative" &
!is.na(myData$delta_ct_MminusE) & myData$delta_ct_MminusE == - THRESHOLD,]
nrow(justOPG)
justOPG$OPG
nrow(justOPG)
table(OPG = myData$OPG > 0, PCR = myData$PCRstatus == "positive", qPCR = myData$delta_ct_MminusE > - THRESHOLD )
justOPG$OPG
```{r question}
justOPG <- myData[!is.na(myData$OPG) & myData$OPG > 0 &
!is.na(myData$PCRstatus) & myData$PCRstatus == "negative" &
!is.na(myData$delta_ct_MminusE) & myData$delta_ct_MminusE == - THRESHOLD,]
nrow(justOPG)
justOPG$OPG
